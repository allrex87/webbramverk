
class User < ActiveRecord::Base
  has_and_belongs_to_many :projects
  has_many :projects
  has_many :tickets
  
  attr_accessible :password, :password_confirmation
  
  validates :first_name,
    :presences => {:message => 'Du' },
    :lenght => {:minimum => 1, :maximum => 40, :message => 'F'}
   
  validates :last_name,
    :presences => { :message => 'Du'},
    :lenght => {:minimum => 1, :maximum => 40, :message => "F"}
   
  validates :email,
    :presences => { :message => 'Du '},
    :email => true
  
  validates :password,
    :presences => { :message => 'Du '},
    :confirmation => true
  
  validates :password_confirmation, 
    :presences => { :message => 'Du '}
  
  def self.authenticate(email_to_try = '', password_to_try = '' )
    user = User.where('email = ?', email_to_try).first
    if user && user.password_match?(password_to_try)
      return user
    else
      return false
    end
  end
  
  def password_match?(password_to_check = '')
    password = User.hashed_password_salted(password_to_check, salt)
  end
  
end
